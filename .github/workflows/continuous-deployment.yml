name: Testing and deployment
on:
  push:
  workflow_dispatch:

jobs:
  lint-python:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check with Ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: 'check --exit-zero --verbose'

      - name: Format with Ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: 'format --check --verbose'

  test-python:
    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12', '3.13']
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: install-uv
        name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: '**/pyproject.toml'

      - id: install-python
        name: Install Python
        run: uv python install ${{ matrix.python }}

      - name: Install Python dependencies
        run: uv sync

      - id: run
        name: Run tests
        run: uv run python test.py

  test-build:
    name: Build Python package
    runs-on: ubuntu-latest
    needs: [test-python]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: install-uv
        name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: '**/pyproject.toml'

      - id: install-python
        name: Install Python
        run: uv python install 3.10

      - name: Install Python dependencies
        run: uv sync

      - id: build
        name: Build release
        run: uv build --sdist --wheel

      - id: save
        name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-candidate
          path: ./dist
          if-no-files-found: error

  tag-release:
    name: Tagged PyPI release
    runs-on: ubuntu-latest
    needs: [test-build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - id: fetch
        name: Fetch artifact
        uses: actions/download-artifact@v4
        with:
          name: release-candidate
          path: ./dist

      - id: publish
        name: Publish release
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
          verify_metadata: false
